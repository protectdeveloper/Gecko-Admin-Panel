export type GetManagementMachinesParams = {
  pageNumber: number;
  pageSize: number;
  searchTerm?: string;
  machineTypeId?: string;
  serialNumber?: string;
  ipAddress?: string;
  isOnline?: boolean;
  isActive?: boolean;
};

export type GetManagementMachinesDTO = {
  success: boolean;
  message: string;
  data: {
    machineID: string;
    machineTypeID: string;
    serialNumber: string;
    eth0MacAddress: string;
    wlan0MacAddress: string;
    simCardNumber: string;
    firmwareVersion: string;
    ipAddress: string;
    connectionName: string;
    passDelay: boolean;
    passDelayDuration: number;
    isOnline: boolean;
    antipassback: boolean;
    hasSound: boolean;
    volumeLevel: number;
    entryReadingEnabled: boolean;
    exitReadingEnabled: boolean;
    relayTriggerDuration: number;
    timerInterval: string;
    restartTime: string;
    isActive: boolean;
    rowGuid: string;
    createdAt: string;
    updatedAt: string;
  }[];
  error: string | null;
  statusCode: number;
  count: number;
  totalCount: number;
  pageNumber: number;
  pageSize: number;
};

export type PostCreateManagementMachineParams = {
  machineTypeID: string;
  serialNumber: string;
  eth0MacAddress: string;
  wlan0MacAddress: string;
  simCardNumber: string;
  firmwareVersion: string;
  ipAddress: string;
  connectionName: string;
  passDelay: boolean;
  passDelayDuration: number;
  isOnline: boolean;
  antipassback: boolean;
  hasSound: boolean;
  volumeLevel: number;
  entryReadingEnabled: boolean;
  exitReadingEnabled: boolean;
  relayTriggerDuration: number;
  timerInterval: string;
  restartTime: string;
  isActive: boolean;
};

export type GetManagementMachineByIdDTO = {
  success: boolean;
  message: string;
  data: {
    machineID: string;
    machineTypeID: string;
    serialNumber: string;
    eth0MacAddress: string;
    wlan0MacAddress: string;
    simCardNumber: string;
    firmwareVersion: string;
    ipAddress: string;
    connectionName: string;
    passDelay: boolean;
    passDelayDuration: number;
    isOnline: boolean;
    antipassback: boolean;
    hasSound: boolean;
    volumeLevel: number;
    entryReadingEnabled: boolean;
    exitReadingEnabled: boolean;
    relayTriggerDuration: number;
    timerInterval: string;
    restartTime: string;
    isActive: boolean;
    rowGuid: string;
    createdAt: string;
    updatedAt: string;
  };
  error: string;
  statusCode: number;
  count: number;
  totalCount: number;
  pageNumber: number;
  pageSize: number;
};

export type PutManagementMachineByIdParams = {
  machineID: string;
  machineTypeID: string;
  serialNumber: string;
  eth0MacAddress: string;
  wlan0MacAddress: string;
  simCardNumber: string;
  firmwareVersion: string;
  ipAddress: string;
  connectionName: string;
  passDelay: boolean;
  passDelayDuration: number;
  isOnline: boolean;
  antipassback: boolean;
  hasSound: boolean;
  volumeLevel: number;
  entryReadingEnabled: boolean;
  exitReadingEnabled: boolean;
  relayTriggerDuration: number;
  timerInterval: string;
  restartTime: string;
  isActive: boolean;
};
